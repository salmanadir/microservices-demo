name: CI (Spring Boot Maven) + Docker

on:
  push: { branches: [ "main" ] }
  pull_request: { branches: [ "main" ] }

env:
  JAVA_VERSION: 21
  WORKING_DIR: ./backend/backend
  REGISTRY: ghcr.io
  IMAGE_NAME: salmanadir/microservices-demo
  DOCKERFILE: backend/backend/Dockerfile

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      # DÃ©tecte mvnw sinon mvn
      - name: Pick Maven command
        working-directory: ${{ env.WORKING_DIR }}
        shell: bash
        run: |
          if [[ -f mvnw ]]; then
            chmod +x mvnw
            echo "MVN=./mvnw" >> "$GITHUB_ENV"
          else
            echo "MVN=mvn" >> "$GITHUB_ENV"
          fi

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ env.JAVA_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ env.JAVA_VERSION }}-
            ${{ runner.os }}-maven-

      - name: Unit tests
        run: ${{ env.MVN }} -B clean test
        working-directory: ${{ env.WORKING_DIR }}

      - name: Package (skip tests)
        run: ${{ env.MVN }} -B package -DskipTests
        working-directory: ${{ env.WORKING_DIR }}

      # --- Docker ---
      - name: Ensure Docker context 'default'
        run: docker context use default || true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build image & (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.WORKING_DIR }}
          file: ${{ env.DOCKERFILE }}
          push: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
